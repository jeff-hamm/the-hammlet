//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v1.0.0.0
//   At: 2025-02-09T17:22:16.4945343-08:00
//
// *** Make sure the version of the codegen tool and your nugets NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/user/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace Hammlet.NetDaemon.Models;
public partial record MusicAssistantGetLibraryParameters
{
    ///<summary>Select the Music Assistant instance to perform the search on.</summary>
    [JsonPropertyName("config_entry_id")]
    public object? ConfigEntryId { get; init; }

    ///<summary>The media type for which to request details for. eg: playlist</summary>
    [JsonPropertyName("media_type")]
    public object? MediaType { get; init; }

    ///<summary>Filter items so only favorites items are returned. eg: true</summary>
    [JsonPropertyName("favorite")]
    public bool? Favorite { get; init; }

    ///<summary>Optional search string to search through this library. eg: We Are The Champions</summary>
    [JsonPropertyName("search")]
    public string? Search { get; init; }

    ///<summary>Maximum number of items to return. eg: 25</summary>
    [JsonPropertyName("limit")]
    public long? Limit { get; init; }

    ///<summary>Offset to start the list from. eg: 25</summary>
    [JsonPropertyName("offset")]
    public long? Offset { get; init; }

    ///<summary>Sort the list by this field. eg: random</summary>
    [JsonPropertyName("order_by")]
    public object? OrderBy { get; init; }

    ///<summary>Filter albums by type. eg: single</summary>
    [JsonPropertyName("album_type")]
    public IEnumerable<object>? AlbumType { get; init; }

    ///<summary>Only return Album Artists when listing the Artists library items. eg: true</summary>
    [JsonPropertyName("album_artists_only")]
    public bool? AlbumArtistsOnly { get; init; }
}