//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v1.0.0.0
//   At: 2025-02-03T13:48:13.8336285-08:00
//
// *** Make sure the version of the codegen tool and your nugets NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/user/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace Hammlet.NetDaemon.Models;
public partial class SwitchEntities : IEntityDomain<SwitchEntity>
{
    private readonly IHaContext _haContext;
    public SwitchEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all switch entities currently registered (at runtime) in Home Assistant as SwitchEntity</summary>
    public IEnumerable<SwitchEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("switch.")).Select(e => new SwitchEntity(e));
    public SwitchEntity Entity(string entityId)
    {
        return (SwitchEntity)_haContext.Entity(entityId);
    }

    ///<summary>Adaptive Lighting Adapt Brightness: AdaptingLighting</summary>
    public SwitchEntity AdaptiveLightingAdaptBrightnessAdaptinglighting => new(_haContext, "switch.adaptive_lighting_adapt_brightness_adaptinglighting");
    ///<summary>Adaptive Lighting Adapt Color: AdaptingLighting</summary>
    public SwitchEntity AdaptiveLightingAdaptColorAdaptinglighting => new(_haContext, "switch.adaptive_lighting_adapt_color_adaptinglighting");
    ///<summary>Adaptive Lighting: AdaptingLighting</summary>
    public SwitchEntity AdaptiveLightingAdaptinglighting => new(_haContext, "switch.adaptive_lighting_adaptinglighting");
    ///<summary>Adaptive Lighting Sleep Mode: AdaptingLighting</summary>
    public SwitchEntity AdaptiveLightingSleepModeAdaptinglighting => new(_haContext, "switch.adaptive_lighting_sleep_mode_adaptinglighting");
    ///<summary>All Off Ignore Unavailable</summary>
    public SwitchEntity AllOffIgnoreUnavailable => new(_haContext, "switch.all_off_ignore_unavailable");
    ///<summary>All Off Restore On Deactivate</summary>
    public SwitchEntity AllOffRestoreOnDeactivate => new(_haContext, "switch.all_off_restore_on_deactivate");
    ///<summary>All Off Stateful Scene</summary>
    public SwitchEntity AllOffStatefulScene => new(_haContext, "switch.all_off_stateful_scene");
    ///<summary>Bright Ignore Unavailable</summary>
    public SwitchEntity BrightIgnoreUnavailable => new(_haContext, "switch.bright_ignore_unavailable");
    ///<summary>Bright Restore On Deactivate</summary>
    public SwitchEntity BrightRestoreOnDeactivate => new(_haContext, "switch.bright_restore_on_deactivate");
    ///<summary>Bright Stateful Scene</summary>
    public SwitchEntity BrightStatefulScene => new(_haContext, "switch.bright_stateful_scene");
    ///<summary>Dinner Time Ignore Unavailable</summary>
    public SwitchEntity DinnerTimeIgnoreUnavailable => new(_haContext, "switch.dinner_time_ignore_unavailable");
    ///<summary>Dinner Time Restore On Deactivate</summary>
    public SwitchEntity DinnerTimeRestoreOnDeactivate => new(_haContext, "switch.dinner_time_restore_on_deactivate");
    ///<summary>Dinner Time Stateful Scene</summary>
    public SwitchEntity DinnerTimeStatefulScene => new(_haContext, "switch.dinner_time_stateful_scene");
    ///<summary>Evenink Ignore Unavailable</summary>
    public SwitchEntity EveninkIgnoreUnavailable => new(_haContext, "switch.evenink_ignore_unavailable");
    ///<summary>Evenink Restore On Deactivate</summary>
    public SwitchEntity EveninkRestoreOnDeactivate => new(_haContext, "switch.evenink_restore_on_deactivate");
    ///<summary>Evenink Stateful Scene</summary>
    public SwitchEntity EveninkStatefulScene => new(_haContext, "switch.evenink_stateful_scene");
    ///<summary>Finger Robot 2 Switch</summary>
    public SwitchEntity FingerRobot2Switch => new(_haContext, "switch.finger_robot_2_switch");
    ///<summary>Hammet BT Proxy BLE Gateway Discovery</summary>
    public SwitchEntity HammetBtProxyBleGatewayDiscovery => new(_haContext, "switch.hammet_bt_proxy_ble_gateway_discovery");
    ///<summary>Hammlet Soundsystem LED</summary>
    public SwitchEntity HammletBedlampLed => new(_haContext, "switch.hammlet_bedlamp_led");
    ///<summary>Hangout Ignore Unavailable</summary>
    public SwitchEntity HangoutIgnoreUnavailable => new(_haContext, "switch.hangout_ignore_unavailable");
    ///<summary>Hangout Restore On Deactivate</summary>
    public SwitchEntity HangoutRestoreOnDeactivate => new(_haContext, "switch.hangout_restore_on_deactivate");
    ///<summary>Hangout Stateful Scene</summary>
    public SwitchEntity HangoutStatefulScene => new(_haContext, "switch.hangout_stateful_scene");
    ///<summary>Hey Nabu Mute</summary>
    public SwitchEntity HeyNabuMute => new(_haContext, "switch.hey_nabu_mute");
    ///<summary>Hey Nabu Wake sound</summary>
    public SwitchEntity HeyNabuWakeSound => new(_haContext, "switch.hey_nabu_wake_sound");
    ///<summary>Kitchen Switch</summary>
    public SwitchEntity KitchenSwitch => new(_haContext, "switch.kitchen_switch");
    ///<summary>Liminal Switch</summary>
    public SwitchEntity LiminalSwitch => new(_haContext, "switch.liminal_switch");
    ///<summary>Night Ignore Unavailable</summary>
    public SwitchEntity NightIgnoreUnavailable => new(_haContext, "switch.night_ignore_unavailable");
    ///<summary>Night Restore On Deactivate</summary>
    public SwitchEntity NightRestoreOnDeactivate => new(_haContext, "switch.night_restore_on_deactivate");
    ///<summary>Night Stateful Scene</summary>
    public SwitchEntity NightStatefulScene => new(_haContext, "switch.night_stateful_scene");
    ///<summary>Normal Butts Ignore Unavailable</summary>
    public SwitchEntity NormalButtsIgnoreUnavailable => new(_haContext, "switch.normal_butts_ignore_unavailable");
    ///<summary>Normal Butts Restore On Deactivate</summary>
    public SwitchEntity NormalButtsRestoreOnDeactivate => new(_haContext, "switch.normal_butts_restore_on_deactivate");
    ///<summary>Stateful Scene</summary>
    public SwitchEntity NormalButtsStatefulScene => new(_haContext, "switch.normal_butts_stateful_scene");
    ///<summary>Outdoor Switch</summary>
    public SwitchEntity OutdoorSwitch => new(_haContext, "switch.outdoor_switch");
    ///<summary>Pants Emergency Start Off Ignore Unavailable</summary>
    public SwitchEntity PantsEmergencyStartOffIgnoreUnavailable => new(_haContext, "switch.pants_emergency_start_off_ignore_unavailable");
    ///<summary>Pants Emergency Start Off Restore On Deactivate</summary>
    public SwitchEntity PantsEmergencyStartOffRestoreOnDeactivate => new(_haContext, "switch.pants_emergency_start_off_restore_on_deactivate");
    ///<summary>Stateful Scene</summary>
    public SwitchEntity PantsEmergencyStartOffStatefulScene => new(_haContext, "switch.pants_emergency_start_off_stateful_scene");
    ///<summary>Pants Emergency Start On Ignore Unavailable</summary>
    public SwitchEntity PantsEmergencyStartOnIgnoreUnavailable => new(_haContext, "switch.pants_emergency_start_on_ignore_unavailable");
    ///<summary>Pants Emergency Start On Restore On Deactivate</summary>
    public SwitchEntity PantsEmergencyStartOnRestoreOnDeactivate => new(_haContext, "switch.pants_emergency_start_on_restore_on_deactivate");
    ///<summary>Stateful Scene</summary>
    public SwitchEntity PantsEmergencyStartOnStatefulScene => new(_haContext, "switch.pants_emergency_start_on_stateful_scene");
    ///<summary>Pants Off Emergency Ignore Unavailable</summary>
    public SwitchEntity PantsOffEmergencyIgnoreUnavailable => new(_haContext, "switch.pants_off_emergency_ignore_unavailable");
    ///<summary>Pants Off Emergency Restore On Deactivate</summary>
    public SwitchEntity PantsOffEmergencyRestoreOnDeactivate => new(_haContext, "switch.pants_off_emergency_restore_on_deactivate");
    ///<summary>Stateful Scene</summary>
    public SwitchEntity PantsOffEmergencyStatefulScene => new(_haContext, "switch.pants_off_emergency_stateful_scene");
    ///<summary>Pink and sexy Ignore Unavailable</summary>
    public SwitchEntity PinkAndSexyIgnoreUnavailable => new(_haContext, "switch.pink_and_sexy_ignore_unavailable");
    ///<summary>Pink and sexy Restore On Deactivate</summary>
    public SwitchEntity PinkAndSexyRestoreOnDeactivate => new(_haContext, "switch.pink_and_sexy_restore_on_deactivate");
    ///<summary>Pink and sexy Stateful Scene</summary>
    public SwitchEntity PinkAndSexyStatefulScene => new(_haContext, "switch.pink_and_sexy_stateful_scene");
    ///<summary>Reference Light Do not disturb</summary>
    public SwitchEntity ReferenceLightDoNotDisturb => new(_haContext, "switch.reference_light_do_not_disturb");
    ///<summary>Speakers</summary>
    public SwitchEntity Speakers => new(_haContext, "switch.speakers");
    ///<summary>Tentacle Lamp</summary>
    public SwitchEntity TentacleLamp => new(_haContext, "switch.tentacle_lamp");
    ///<summary>Tentacle Lamp Auto update enabled</summary>
    public SwitchEntity TentacleLampAutoUpdateEnabled => new(_haContext, "switch.tentacle_lamp_auto_update_enabled");
    ///<summary>Tentacle Lamp LED</summary>
    public SwitchEntity TentacleLampLed => new(_haContext, "switch.tentacle_lamp_led");
    ///<summary>Tentacle Lamp LED</summary>
    public SwitchEntity TentacleLed => new(_haContext, "switch.tentacle_led");
    ///<summary>Turn off all lights Ignore Unavailable</summary>
    public SwitchEntity TurnOffAllLightsIgnoreUnavailable => new(_haContext, "switch.turn_off_all_lights_ignore_unavailable");
    ///<summary>Turn off all lights Restore On Deactivate</summary>
    public SwitchEntity TurnOffAllLightsRestoreOnDeactivate => new(_haContext, "switch.turn_off_all_lights_restore_on_deactivate");
    ///<summary>Turn off all lights Stateful Scene</summary>
    public SwitchEntity TurnOffAllLightsStatefulScene => new(_haContext, "switch.turn_off_all_lights_stateful_scene");
    ///<summary>Working Ignore Unavailable</summary>
    public SwitchEntity WorkingIgnoreUnavailable => new(_haContext, "switch.working_ignore_unavailable");
    ///<summary>Working Restore On Deactivate</summary>
    public SwitchEntity WorkingRestoreOnDeactivate => new(_haContext, "switch.working_restore_on_deactivate");
    ///<summary>Working Stateful Scene</summary>
    public SwitchEntity WorkingStatefulScene => new(_haContext, "switch.working_stateful_scene");
    ///<summary>Zigbee2MQTT Bridge Permit join</summary>
    public SwitchEntity Zigbee2mqttBridgePermitJoin => new(_haContext, "switch.zigbee2mqtt_bridge_permit_join");
    public SwitchIds Ids => new();
}