//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v1.0.0.0
//   At: 2025-02-14T20:58:04.0057009-08:00
//
// *** Make sure the version of the codegen tool and your nugets NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/user/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace Hammlet.NetDaemon.Models;
public partial record FluxLedSetMusicModeParameters
{
    ///<summary>Microphone sensitivity (0-100). eg: 80</summary>
    [JsonPropertyName("sensitivity")]
    public long? Sensitivity { get; init; }

    ///<summary>Light brightness (0-100). eg: 80</summary>
    [JsonPropertyName("brightness")]
    public long? Brightness { get; init; }

    ///<summary>Light screen mode for 2 dimensional pixels (Addressable models only).</summary>
    [JsonPropertyName("light_screen")]
    public bool? LightScreen { get; init; }

    ///<summary>Effect (1-16 on Addressable models, 0-3 on RGB with MIC models). eg: 1</summary>
    [JsonPropertyName("effect")]
    public long? Effect { get; init; }

    ///<summary>The foreground RGB color. eg: [255, 100, 100]</summary>
    [JsonPropertyName("foreground_color")]
    public IReadOnlyCollection<int>? ForegroundColor { get; init; }

    ///<summary>The background RGB color (Addressable models only). eg: [255, 100, 100]</summary>
    [JsonPropertyName("background_color")]
    public IReadOnlyCollection<int>? BackgroundColor { get; init; }
}