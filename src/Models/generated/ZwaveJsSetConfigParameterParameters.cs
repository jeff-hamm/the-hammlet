//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v1.0.0.0
//   At: 2025-02-03T15:53:28.2490515-08:00
//
// *** Make sure the version of the codegen tool and your nugets NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/user/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace Hammlet.NetDaemon.Models;
public partial record ZwaveJsSetConfigParameterParameters
{
    ///<summary>The area(s) to target for this action. If an area is specified, all Z-Wave devices and entities in that area will be targeted for this action. eg: living_room</summary>
    [JsonPropertyName("area_id")]
    public IEnumerable<string>? AreaId { get; init; }

    ///<summary>The device(s) to target for this action. eg: 8f4219cfa57e23f6f669c4616c2205e2</summary>
    [JsonPropertyName("device_id")]
    public IEnumerable<string>? DeviceId { get; init; }

    ///<summary>The entity ID(s) to target for this action. eg: sensor.living_room_temperature</summary>
    [JsonPropertyName("entity_id")]
    public IEnumerable<string>? EntityId { get; init; }

    ///<summary>The configuration parameter&apos;s endpoint. eg: 1</summary>
    [JsonPropertyName("endpoint")]
    public string? Endpoint { get; init; }

    ///<summary>The name (or ID) of the configuration parameter you want to configure. eg: Minimum brightness level</summary>
    [JsonPropertyName("parameter")]
    public string? Parameter { get; init; }

    ///<summary>Target a specific bitmask (see the documentation for more information). Cannot be combined with &apos;Value size&apos; or &apos;Value format&apos;.</summary>
    [JsonPropertyName("bitmask")]
    public string? Bitmask { get; init; }

    ///<summary>The new value to set for this configuration parameter. eg: 5</summary>
    [JsonPropertyName("value")]
    public string? Value { get; init; }

    ///<summary>Size of the value, either 1, 2, or 4. Used in combination with &apos;Value format&apos; when a config parameter is not defined in your device&apos;s configuration file. Cannot be combined with &apos;Bitmask&apos;. eg: 1</summary>
    [JsonPropertyName("value_size")]
    public double? ValueSize { get; init; }

    ///<summary>Format of the value, 0 for signed integer, 1 for unsigned integer, 2 for enumerated, 3 for bitfield. Used in combination with &apos;Value size&apos; when a config parameter is not defined in your device&apos;s configuration file. Cannot be combined with &apos;Bitmask&apos;. eg: 1</summary>
    [JsonPropertyName("value_format")]
    public double? ValueFormat { get; init; }
}