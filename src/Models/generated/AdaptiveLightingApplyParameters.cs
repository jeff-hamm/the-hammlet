//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v24.52.0.0
//   At: 2025-01-17T19:32:33.6630701-08:00
//
// *** Make sure the version of the codegen tool and your nugets NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/user/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace Hammlet.NetDaemon.Models;
public partial record AdaptiveLightingApplyParameters
{
    ///<summary>The `entity_id` of the switch with the settings to apply. 📝</summary>
    [JsonPropertyName("entity_id")]
    public string? EntityId { get; init; }

    ///<summary>A light (or list of lights) to apply the settings to. 💡</summary>
    [JsonPropertyName("lights")]
    public IEnumerable<string>? Lights { get; init; }

    ///<summary>Duration of transition when lights change, in seconds. 🕑 eg: 10</summary>
    [JsonPropertyName("transition")]
    public string? Transition { get; init; }

    ///<summary>Whether to adapt the brightness of the light. 🌞 eg: True</summary>
    [JsonPropertyName("adapt_brightness")]
    public bool? AdaptBrightness { get; init; }

    ///<summary>Whether to adapt the color on supporting lights. 🌈 eg: True</summary>
    [JsonPropertyName("adapt_color")]
    public bool? AdaptColor { get; init; }

    ///<summary>Whether to prefer RGB color adjustment over light color temperature when possible. 🌈 eg: False</summary>
    [JsonPropertyName("prefer_rgb_color")]
    public bool? PreferRgbColor { get; init; }

    ///<summary>Whether to turn on lights that are currently off. 🔆 eg: False</summary>
    [JsonPropertyName("turn_on_lights")]
    public bool? TurnOnLights { get; init; }
}