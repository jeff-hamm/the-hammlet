//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v24.50.0.0
//   At: 2024-12-29T20:57:07.5712404-08:00
//
// *** Make sure the version of the codegen tool and your nugets NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/user/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace Hammlet.NetDaemon.Models;
public partial class SceneEntities
{
    private readonly IHaContext _haContext;
    public SceneEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all scene entities currently registered (at runtime) in Home Assistant as SceneEntity</summary>
    public IEnumerable<SceneEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("scene.")).Select(e => new SceneEntity(e));
    ///<summary>All Off</summary>
    public SceneEntity AllOff => new(_haContext, "scene.all_off");
    ///<summary>Bright</summary>
    public SceneEntity Bright => new(_haContext, "scene.bright");
    ///<summary>Dinner Time</summary>
    public SceneEntity DinnerTime => new(_haContext, "scene.dinner_time");
    ///<summary>Evenink</summary>
    public SceneEntity Evenink => new(_haContext, "scene.evenink");
    ///<summary>Hangout</summary>
    public SceneEntity Hangout => new(_haContext, "scene.hangout");
    ///<summary>Night</summary>
    public SceneEntity Night => new(_haContext, "scene.night");
    ///<summary>Normal Butts</summary>
    public SceneEntity NormalButts => new(_haContext, "scene.normal_butts");
    ///<summary>Pants Emergency Start On</summary>
    public SceneEntity PantsEmergencyStart => new(_haContext, "scene.pants_emergency_start");
    ///<summary>Pants Off Emergency</summary>
    public SceneEntity PantsOffEmergencyGo => new(_haContext, "scene.pants_off_emergency_go");
    ///<summary>Pants Emergency Start Off</summary>
    public SceneEntity PantsOffEmergencyOff => new(_haContext, "scene.pants_off_emergency_off");
    ///<summary>Pink and sexy</summary>
    public SceneEntity PinkAndSexy => new(_haContext, "scene.pink_and_sexy");
    ///<summary>Turn off allÂ lights</summary>
    public SceneEntity TurnOffAllLights => new(_haContext, "scene.turn_off_all_lights");
    ///<summary>Working</summary>
    public SceneEntity Working => new(_haContext, "scene.working");
}