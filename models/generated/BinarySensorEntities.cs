//------------------------------------------------------------------------------
// <auto-generated>
// Generated using NetDaemon CodeGenerator nd-codegen v24.50.0.0
//   At: 2024-12-29T20:57:07.5452246-08:00
//
// *** Make sure the version of the codegen tool and your nugets NetDaemon.* have the same version.***
// You can use following command to keep it up to date with the latest version:
//   dotnet tool update NetDaemon.HassModel.CodeGen
//
// To update this file with latest entities run this command in your project directory:
//   dotnet tool run nd-codegen
//
// In the template projects we provided a convenience powershell script that will update
// the codegen and nugets to latest versions update_all_dependencies.ps1.
//
// For more information: https://netdaemon.xyz/docs/user/hass_model/hass_model_codegen
// For more information about NetDaemon: https://netdaemon.xyz/
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using System.Text.Json;
using System.Text.Json.Serialization;
using NetDaemon.HassModel;
using NetDaemon.HassModel.Entities;
using NetDaemon.HassModel.Entities.Core;

namespace Hammlet.NetDaemon.Models;
public partial class BinarySensorEntities
{
    private readonly IHaContext _haContext;
    public BinarySensorEntities(IHaContext haContext)
    {
        _haContext = haContext;
    }

    /// <summary>Enumerates all binary_sensor entities currently registered (at runtime) in Home Assistant as BinarySensorEntity</summary>
    public IEnumerable<BinarySensorEntity> EnumerateAll() => _haContext.GetAllEntities().Where(e => e.EntityId.StartsWith("binary_sensor.")).Select(e => new BinarySensorEntity(e));
    ///<summary>Alive Remote Low battery level</summary>
    public BinarySensorEntity AliveRemoteRemoteControlSwitchLowBatteryLevel => new(_haContext, "binary_sensor.alive_remote_remote_control_switch_low_battery_level");
    ///<summary>Hammlet Soundsystem Cloud connection</summary>
    public BinarySensorEntity HammletSoundsystemCloudConnection => new(_haContext, "binary_sensor.hammlet_soundsystem_cloud_connection");
    ///<summary>Office Dimmer overheating</summary>
    public BinarySensorEntity OfficeDimmerOverheating => new(_haContext, "binary_sensor.office_dimmer_overheating");
    ///<summary>Office Dimmer overpowering</summary>
    public BinarySensorEntity OfficeDimmerOverpowering => new(_haContext, "binary_sensor.office_dimmer_overpowering");
    ///<summary>Projector Ping</summary>
    public BinarySensorEntity ProjectorPing => new(_haContext, "binary_sensor.projector_ping");
    ///<summary>RPi Power status</summary>
    public BinarySensorEntity RpiPowerStatus => new(_haContext, "binary_sensor.rpi_power_status");
    ///<summary>SLZB-06M Ethernet</summary>
    public BinarySensorEntity Slzb06mEthernet => new(_haContext, "binary_sensor.slzb_06m_ethernet");
    ///<summary>SLZB-06M Internet</summary>
    public BinarySensorEntity Slzb06mInternet => new(_haContext, "binary_sensor.slzb_06m_internet");
    ///<summary>Stuartâ€™s iPhone Focus</summary>
    public BinarySensorEntity StuartsIphoneFocus => new(_haContext, "binary_sensor.stuarts_iphone_focus");
    ///<summary>Tentacle Lamp Cloud connection</summary>
    public BinarySensorEntity TapoSmartDimmerCloudConnection => new(_haContext, "binary_sensor.tapo_smart_dimmer_cloud_connection");
    ///<summary>Tentacle Lamp Cloud connection</summary>
    public BinarySensorEntity TentacleLampCloudConnection => new(_haContext, "binary_sensor.tentacle_lamp_cloud_connection");
    ///<summary>Zigbee2MQTT Bridge Connection state</summary>
    public BinarySensorEntity Zigbee2mqttBridgeConnectionState => new(_haContext, "binary_sensor.zigbee2mqtt_bridge_connection_state");
}